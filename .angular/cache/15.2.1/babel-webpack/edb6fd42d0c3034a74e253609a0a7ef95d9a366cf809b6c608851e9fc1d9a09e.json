{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../getdata.service\";\nimport * as i4 from \"@angular/forms\";\nexport class AdminPanelComponent {\n  constructor(http, router, service) {\n    this.http = http;\n    this.router = router;\n    this.service = service;\n    this.isAdmin = false;\n  }\n  ngOnInit() {\n    this.login = new FormGroup({\n      'fname': new FormControl(),\n      'password': new FormControl()\n    });\n    this.service.getData().subscribe(data => {\n      this.data = data;\n    });\n  }\n  logindata(login) {\n    //     console.log(this.login.value);\n    this.service.getData().subscribe(res => {\n      // console.log(res);\n      const user = res.find(a => {\n        return a.name === this.login.value.fname && a.password === this.login.value.password;\n      });\n      if (user) {\n        this.target_name = this.login.get('')?.value;\n        // const userRole = this.data.find((role: any) => role.name === this.target_name);\n        const userRole = user.role;\n        if (userRole === 'admin') {\n          this.isAdmin = true;\n          alert('you are successfully login');\n          console.log(this.isAdmin);\n          this.router.navigate(['/adminpanel/crud']);\n        } else {\n          this.isAdmin = false;\n        }\n      }\n    }, err => {\n      alert('Something was wrong');\n    });\n  }\n}\nAdminPanelComponent.ɵfac = function AdminPanelComponent_Factory(t) {\n  return new (t || AdminPanelComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GetdataService));\n};\nAdminPanelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminPanelComponent,\n  selectors: [[\"app-admin-panel\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"mt-3\"], [\"for\", \"fname\"], [\"type\", \"text\", \"id\", \"fname\", \"formControlName\", \"fname\", \"name\", \"email\", 1, \"form-control\"], [1, \"mb-3\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"id\", \"pwd\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"]],\n  template: function AdminPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminPanelComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.logindata(ctx.login);\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7)(10, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.login);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,EAAEC,SAAS,QAAS,gBAAgB;;;;;;AAWxD,OAAM,MAAOC,mBAAmB;EAU9BC,YAAoBC,IAAgB,EAAUC,MAAc,EAAUC,OAAuB;IAAzE,SAAI,GAAJF,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAkB,YAAO,GAAPC,OAAO;IAF/E,YAAO,GAAK,KAAK;EAEkF;EAEjGC,QAAQ;IAER,IAAI,CAACC,KAAK,GAAG,IAAIP,SAAS,CAAC;MACvB,OAAO,EAAE,IAAID,WAAW,EAAE;MAC1B,UAAU,EAAE,IAAIA,WAAW;KAC5B,CAAC;IAEF,IAAI,CAACM,OAAO,CAACG,OAAO,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MACxC,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EAEJ;EAGAC,SAAS,CAACJ,KAAgB;IACxB;IACA,IAAI,CAACF,OAAO,CAACG,OAAO,EAAE,CACnBC,SAAS,CAACG,GAAG,IAAG;MACf;MAEA,MAAMC,IAAI,GAAGD,GAAG,CAACE,IAAI,CAAEC,CAAM,IAAI;QAC/B,OAAOA,CAAC,CAACC,IAAI,KAAK,IAAI,CAACT,KAAK,CAACU,KAAK,CAACC,KAAK,IAAIH,CAAC,CAACI,QAAQ,KAAK,IAAI,CAACZ,KAAK,CAACU,KAAK,CAACE,QAAQ;MACtF,CAAC,CAAC;MAIF,IAAIN,IAAI,EAAE;QAER,IAAI,CAACO,WAAW,GAAG,IAAI,CAACb,KAAK,CAACc,GAAG,CAAC,EAAE,CAAC,EAAEJ,KAAK;QAE5C;QACA,MAAMK,QAAQ,GAAGT,IAAI,CAACU,IAAI;QAC1B,IAAID,QAAQ,KAAK,OAAO,EAAE;UACxB,IAAI,CAACE,OAAO,GAAG,IAAI;UACnBC,KAAK,CAAC,4BAA4B,CAAC;UACnCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;UACzB,IAAI,CAACpB,MAAM,CAACwB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;SAE3C,MACI;UACH,IAAI,CAACJ,OAAO,GAAG,KAAK;;;IAO1B,CAAC,EAAEK,GAAG,IAAG;MACPJ,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,CAAC;EACJ;;AA9DSxB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdhCC,8BAA4B;MAEEA;QAAA,OAAYC,wBAAgB;MAAA,EAAC;MACrDD,8BAAuB;MACFA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAyF;MAC3FA,iBAAM;MACNA,8BAAkB;MACCA,yBAAS;MAAAA,iBAAQ;MAClCA,2BAAgF;MAElFA,iBAAM;MAGNA,kCAA2C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAZtDA,eAAmB;MAAnBA,qCAAmB","names":["FormControl","FormGroup","AdminPanelComponent","constructor","http","router","service","ngOnInit","login","getData","subscribe","data","logindata","res","user","find","a","name","value","fname","password","target_name","get","userRole","role","isAdmin","alert","console","log","navigate","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/renuka/Downloads/Angular-Task (1)/Angular-Task/ANGULAR/src/app/adminpanel/admin-panel.component.ts","/home/renuka/Downloads/Angular-Task (1)/Angular-Task/ANGULAR/src/app/adminpanel/admin-panel.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { GetdataService } from '../getdata.service';\nimport { FormControl, FormGroup, } from '@angular/forms';\nimport { ServiceService } from './service.service';\n// import { FormsModule } from '@angular/forms';\n// import { RouterModule } from '@angular/router';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent{\n \n    \n  \n\n  login: FormGroup | any;\n  data: any;\n  target_name: any;\nisAdmin:any=false;\n\n  constructor(private http: HttpClient, private router: Router, private service: GetdataService) { }\n\n  ngOnInit(): void {\n\n  this.login = new FormGroup({\n      'fname': new FormControl(),\n      'password': new FormControl()\n    })\n\n    this.service.getData().subscribe((data) => {\n      this.data = data;\n    });\n\n  }\n\n\n  logindata(login: FormGroup) {\n    //     console.log(this.login.value);\n    this.service.getData()\n      .subscribe(res => {\n        // console.log(res);\n        \n        const user = res.find((a: any) => {\n          return a.name === this.login.value.fname && a.password === this.login.value.password\n        });\n\n      \n            \n        if (user) {\n\n          this.target_name = this.login.get('')?.value; \n\n          // const userRole = this.data.find((role: any) => role.name === this.target_name);\n          const userRole = user.role\n          if (userRole === 'admin') {\n            this.isAdmin = true;\n            alert('you are successfully login');\n            console.log(this.isAdmin);\n            this.router.navigate(['/adminpanel/crud'])\n            \n          }\n          else {\n            this.isAdmin = false;\n          }\n                     \n          \n        }\n\n\n      }, err => {\n        alert('Something was wrong');\n      })\n    }\n  }\n\n\n\n\n\n\n    // this.target_name = (<HTMLInputElement>document.getElementById(\"fname\")).value;\n\n    // const userRole = this.userdata.find((role: any) => role.name === this.target_name);\n\n    // if (userRole && userRole.role === 'admin') {\n    //   this.isAdmin = true;\n    // }\n    // else {\n    //   this.isAdmin = false;\n    // }\n\n\n\n//     // onSubmit() {\n//     //     console.log(this.formValues);\n//     // }\n\n//     // constructor(private http: HttpClient, private getDataService: GetdataService) {\n\n//     // }\n//     // ngOnInit(): void {\n//     //   this.getDataService.getUserData().subscribe((data: any) => {\n//     //     this.data = data;\n//     //       })\n//     // }\n\n//     // isadmin = false;\n//     // target_name = this.myform.get('user')?.value; \n\n\n//     // if(myuser: any) {\n//     //   const userRole = this.data.find((role: any) => role.name === this.target_name);\n\n\n//     //   if (userRole && userRole.role === 'admin') {\n//     //     this.isadmin = true;\n//     //   }\n//     //   else {\n//     //     this.isadmin = false;\n//     //   }\n\n//     // }\n\n\n//   }\n\n\n\n\n// function logindata(login: any, FormGroup: typeof FormGroup) {\n//   throw new Error('Function not implemented.');\n// }\n\n","<div class=\"container mt-3\">\n \n    <form [formGroup]=\"login\" (ngSubmit)=\"logindata(login)\">\n      <div class=\"mb-3 mt-3\">\n        <label for=\"fname\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"fname\" formControlName=\"fname\"  name=\"email\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"pwd\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"pwd\" formControlName=\"password\">\n        <br> \n      </div>\n      \n    \n      <button type=\"submit\" class=\"btn btn-dark\">Submit</button>\n    </form>\n  </div>\n \n \n \n \n \n \n \n \n \n \n <!-- <form [formGroup]=\"login\" (ngSubmit)=\"logindata(login)\" >\n    user: <input type=\"text\" formControlName=\"fname\" id=\"fname\"><br>\n    password: <input type=\"password\" formControlName=\"password\">\n    <br>\n<button >Login</button>\n\n    </form> \n     -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}