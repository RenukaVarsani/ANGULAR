{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n  }\n  postData(data) {\n    return this.http.post(\"http://localhost:3000/blogDetail\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  getData() {\n    return this.http.get(\"http://localhost:3000/blogDetail\").pipe(map(res => {\n      return res;\n    }));\n  }\n  updateData(data, id) {\n    return this.http.put(\"http://localhost:3000/blogDetail\" + id, data).pipe(map(res => {\n      return res;\n    }));\n  }\n  deleteData(id) {\n    return this.http.delete(\"http://localhost:3000/blogDetail\" + id).pipe(map(res => {\n      return res;\n    }));\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAIpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAEvCC,QAAQ,CAACC,IAAQ;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,kCAAkC,EAACD,IAAI,CAAC,CAClEE,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MAAC,OAAOA,GAAG;IAAC,CAAC,CAAC,CAAC;EAExC;EAGAC,OAAO;IACL,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAM,kCAAkC,CAAC,CAC1DH,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MAAC,OAAOA,GAAG;IAAC,CAAC,CAAC,CAAC;EAExC;EAEAG,UAAU,CAACN,IAAQ,EAACO,EAAS;IAC3B,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,kCAAkC,GAACD,EAAE,EAACP,IAAI,CAAC,CAClEE,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MAAC,OAAOA,GAAG;IAAC,CAAC,CAAC,CAAC;EACxC;EAEAM,UAAU,CAACF,EAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACY,MAAM,CAAM,kCAAkC,GAACH,EAAE,CAAC,CAChEL,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MAAC,OAAOA,GAAG;IAAC,CAAC,CAAC,CAAC;EAExC;;AA1BaP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["map","CrudService","constructor","http","postData","data","post","pipe","res","getData","get","updateData","id","put","deleteData","delete","factory","providedIn"],"sourceRoot":"","sources":["/home/renuka/Downloads/Angular-Task (1)/Angular-Task/ANGULAR/src/app/crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  constructor(private http:HttpClient) { }\n\n  postData(data:any){\n    return this.http.post<any>(\"http://localhost:3000/blogDetail\",data)\n    .pipe(map((res:any)=>{return res;}))\n    \n}\n\n\ngetData(){\n  return this.http.get<any>(\"http://localhost:3000/blogDetail\")\n    .pipe(map((res:any)=>{return res;}))\n    \n}\n\nupdateData(data:any,id:number){\n  return this.http.put<any>(\"http://localhost:3000/blogDetail\"+id,data)\n    .pipe(map((res:any)=>{return res;}))\n}\n\ndeleteData(id:number){\n  return this.http.delete<any>(\"http://localhost:3000/blogDetail\"+id)\n    .pipe(map((res:any)=>{return res;}))\n    \n}\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}