{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { data } from './data.model';\nlet BlogComponent = class BlogComponent {\n  constructor(service, http, formbuilder, api, route) {\n    this.service = service;\n    this.http = http;\n    this.formbuilder = formbuilder;\n    this.api = api;\n    this.route = route;\n    this.dataObj = new data();\n  }\n  ngOnInit() {\n    this.service.getUserData().subscribe(mydata => {\n      this.mydata = mydata;\n    });\n    this.details = this.formbuilder.group({\n      title: [''],\n      des: ['']\n    });\n    this.itemId = this.route.snapshot.paramMap.get('id');\n    this.service.getDataById(this.itemId).subscribe(data => {\n      this.data = data;\n    });\n  }\n};\nBlogComponent = __decorate([Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})], BlogComponent);\nexport { BlogComponent };\nclickAddData();\n{\n  this.details.reset();\n  this.showAdd = true;\n  this.showUpdate = false;\n}\npostData();\n{\n  this.dataObj.title = this.details.value.title;\n  this.dataObj.des = this.details.value.des;\n  this.api.postData(this.dataObj).subscribe(res => {\n    console.log(res);\n    alert(\"added\");\n    this.details.reset();\n  });\n}\ngetAllData();\n{\n  this.api.getData().subscribe(res => {\n    this.mydata = res;\n  });\n}\ndeleteData(row, any);\n{\n  this.api.deleteData(row.id).subscribe(res => {\n    alert(\"deleted\");\n    this.getAllData();\n  });\n}\nonEdit(row, any);\n{\n  this.showAdd = false;\n  this.showUpdate = true;\n  this.details.controls['title'].setValue(row.title);\n  this.details.controls['des'].setValue(row.des);\n}\nupdateData();\n{\n  this.dataObj.title = this.details.value.title;\n  this.dataObj.des = this.details.value.des;\n  this.api.updateData(this.dataObj, this.dataObj.id).subscribe(res => {\n    console.log(res);\n    alert(\"update\");\n  });\n}","map":{"version":3,"mappings":"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","names":["Component","data","BlogComponent","constructor","service","http","formbuilder","api","route","ngOnInit","getUserData","subscribe","mydata","details","group","title","des","itemId","snapshot","paramMap","get","getDataById","selector","templateUrl","styleUrls","clickAddData","reset","showAdd","showUpdate","postData","dataObj","value","res","console","log","alert","getAllData","getData","deleteData","row","any","id","onEdit","controls","setValue","updateData"],"sourceRoot":"","sources":["/home/renuka/Downloads/Angular-Task (1)/Angular-Task/ANGULAR/src/app/blog/blog.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { GetdataService } from '../getdata.service';\nimport {  FormGroup, FormBuilder} from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { data } from './data.model';\nimport { CrudService } from '../crud.service';\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  mydata:any;\n  row:any\n  details: FormGroup | any;\n  showAdd! : boolean;\n  showUpdate! : boolean;\n  dataObj: data = new data();\n  constructor(private service: GetdataService, private http: HttpClient,private formbuilder:FormBuilder,private api:CrudService,private route:ActivatedRoute) { }\n\n\n\n\n  ngOnInit(): void {\n\n\n    this.service.getUserData().subscribe((mydata) => {\n         this.mydata = mydata;\n       });\n\nthis.details=this.formbuilder.group({\n    \n      title : [''],\n      des : ['']\n\n    })\n\n\n    this.itemId = this.route.snapshot.paramMap.get('id');\n    this.service.getDataById(this.itemId).subscribe((data) => {\n  this.data = data;\n  });\n  }\n  \n\n\n\n  }\n\n\n  \n  clickAddData(){\n    this.details.reset();\n    this.showAdd = true;\n    this.showUpdate= false;\n}\n\n\n\n  postData(){\n    this.dataObj.title=this.details.value.title;\n    this.dataObj.des=this.details.value.des;\n    this.api.postData(this.dataObj)\n    .subscribe(res=>{console.log(res);\n      alert(\"added\");\n      this.details.reset();\n    })\n     }\n\n\ngetAllData(){\n  this.api.getData()\n  .subscribe(res=>{\n    this.mydata=res;\n  })\n}\n\n\ndeleteData(row:any){\n  this.api.deleteData(row.id)\n  .subscribe(res=>{\n  alert(\"deleted\")\n  this.getAllData()\n  })\n}  \n\nonEdit(row:any){\n\n  this.showAdd = false;\n  this.showUpdate= true;\n  this.details.controls['title'].setValue(row.title);\n  this.details.controls['des'].setValue(row.des);\n}\n\nupdateData(){\n  this.dataObj.title = this.details.value.title;\n  this.dataObj.des = this.details.value.des;\n  this.api.updateData(this.dataObj,this.dataObj.id)\n  .subscribe(res=>{console.log(res);\n    alert(\"update\");\n\n  }) \n\n  \n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}